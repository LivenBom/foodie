<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mapper.CategoryMapper">

    <resultMap id="BaseResultMap" type="com.imooc.pojo.Category">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="type" column="type" jdbcType="INTEGER"/>
            <result property="fatherId" column="father_id" jdbcType="INTEGER"/>
            <result property="logo" column="logo" jdbcType="VARCHAR"/>
            <result property="slogan" column="slogan" jdbcType="VARCHAR"/>
            <result property="catImage" column="cat_image" jdbcType="VARCHAR"/>
            <result property="bgColor" column="bg_color" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,type,
        father_id,logo,slogan,
        cat_image,bg_color
    </sql>


    <!-- 子类查询   -->
    <resultMap id="myCategoryVO" type="com.imooc.pojo.vo.CategoryVO">
        <!--
            property 实体属性名；
            column 数据库表字段名；
            jdbcType 可以省略不写    -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="fatherId" column="fatherId"/>

        <!--
            collection 标签：
            property：实体类中的集合属性名；
            ofType：集合中元素的类型；    -->
        <collection property="subCatList" ofType="com.imooc.pojo.vo.SubCategoryVO">
            <id property="subId" column="subId"/>
            <result property="subName" column="subName"/>
            <result property="subType" column="subType"/>
            <result property="subFatherId" column="subFatherId"/>
        </collection>
    </resultMap>

    <select id="getSubCatList" resultMap="myCategoryVO" parameterType="int">
        SELECT
            f.id as id,
            f.`name` as `name`,
            f.type as type,
            f.father_id as fatherId,
            c.id as subId,
            c.`name` as subName,
            c.type as subType,
            c.father_id as subFatherId
        FROM
            category f
                LEFT JOIN
            category c
            ON
                f.id = c.father_id
        WHERE
            f.father_id = #{rootCatId}
    </select>


    <!-- 首页商品推荐   -->
    <resultMap id="myNewItemsVO" type="com.imooc.pojo.vo.NewItemsVO">
        <id property="rootCatId" column="rootCatId"/>
        <result property="rootCatName" column="rootCatName"/>
        <result property="slogan" column="slogan"/>
        <result property="catImage" column="catImage"/>
        <result property="bgColor" column="bgColor"/>

        <collection property="simpleItemList" ofType="com.imooc.pojo.vo.SimpleItemVO">
            <id property="itemId" column="itemId"/>
            <result property="itemName" column="itemName"/>
            <result property="itemUrl" column="itemUrl"/>
        </collection>
    </resultMap>

    <select id="getSixNewItemsLazy" resultMap="myNewItemsVO" parameterType="Map">
        SELECT
            f.id as rootCatId,
            f.`name`as rootCatName,
            f.slogan as slogan,
            f.cat_image as catImage,
            f.bg_color as bgColor,
            i.id as itemId,
            i.item_name as itemName,
            ii.url as itemUrl,
            i.created_time as createdTime
        FROM
            category f
        LEFT JOIN
            items i
        ON
            f.id = i.root_cat_id
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        WHERE
            f.type = 1
        AND
            i.root_cat_id = #{paramsMap.rootCatId}
        AND
            ii.is_main = 1
        ORDER BY
            i.created_time
        DESC
            LIMIT 0, 6
    </select>
</mapper>
